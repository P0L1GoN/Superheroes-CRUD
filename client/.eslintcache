[{"D:\\Superheroes-CRUD\\client\\src\\index.js":"1","D:\\Superheroes-CRUD\\client\\src\\App.js":"2","D:\\Superheroes-CRUD\\client\\src\\reportWebVitals.js":"3","D:\\Superheroes-CRUD\\client\\src\\components\\Heroes\\index.js":"4","D:\\Superheroes-CRUD\\client\\src\\components\\HeroPages\\index.js":"5","D:\\Superheroes-CRUD\\client\\src\\components\\ModalWindow\\index.js":"6","D:\\Superheroes-CRUD\\client\\src\\components\\HeroInfo\\index.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":165,"mtime":1610880582507,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":9299,"mtime":1611269314267,"results":"12","hashOfConfig":"9"},{"size":2490,"mtime":1611268913857,"results":"13","hashOfConfig":"9"},{"size":569,"mtime":1610919651856,"results":"14","hashOfConfig":"9"},{"size":1058,"mtime":1611262243084,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"2tskn6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"D:\\Superheroes-CRUD\\client\\src\\index.js",[],["35","36"],"D:\\Superheroes-CRUD\\client\\src\\App.js",["37"],"import logo from './logo.svg';\nimport Heroes from \"./components/Heroes\"\nfunction App() {\n  return (\n    <>\n    <Heroes></Heroes>\n    </>\n  );\n}\n\nexport default App;\n","D:\\Superheroes-CRUD\\client\\src\\reportWebVitals.js",[],"D:\\Superheroes-CRUD\\client\\src\\components\\Heroes\\index.js",["38","39"],"import React,{useState,useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios'\r\nimport styles from './Heroes.module.sass'\r\nimport HeroPages from '../HeroPages'\r\nimport ModalWindow from '../ModalWindow'\r\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport ImageUploading from \"react-images-uploading\"\r\n\r\nconst http = axios.create({\r\n    baseURL: 'http://localhost:3001',\r\n    responseType: \"json\",\r\n    timeout: 10000,\r\n})\r\n//функция получения списка героев\r\n\r\n\r\nconst Heroes = () => {\r\n    const [heroList,setHeroList]=useState([])\r\n    const [isHeroAdd,setIsHeroAdd]=useState(false)\r\n    const [isImagesAdd,setIsImagesAdd]=useState(false)\r\n    const [isMessage,setIsMessage]=useState(false)\r\n    const [nickname,setNickname]=useState('')\r\n    const [realName,setRealName]=useState('')\r\n    const [originDescription,setOriginDescription]=useState('')\r\n    const [superpowers,setSuperpowers]=useState('')\r\n    const [catchPhrase,setCatchPhrase]=useState('')\r\n    const [heroImageArray,setHeroImageArray]=useState([])\r\n    const [messageModal,setMessageModal]=useState('')\r\n    const [activeHero, setActiveHero]=useState()\r\n    useEffect(()=>{\r\n        getHeroes()\r\n    },[])\r\n    const getHeroes= ()=>{\r\n        http.get(`/heroes`)\r\n        .then(res=>{\r\n            setHeroList(res.data)\r\n        })\r\n        .catch(error=>{\r\n            console.error(error)\r\n        })\r\n    }\r\n    const createHero=()=>{\r\n        http.post(`/heroes/create`,{\r\n            \"nickname\": nickname,\r\n            \"realName\": realName,\r\n            \"originDescription\": originDescription,\r\n            \"superpowers\": superpowers,\r\n            \"catchPhrase\": catchPhrase,\r\n            \"imageArray\": heroImageArray\r\n        })\r\n        .then(res=>{\r\n            getHeroes()\r\n            setMessageModal('Герой успешно добавился')\r\n            setIsMessage(true)\r\n            clearInputs()\r\n        })\r\n        .catch(error=>{\r\n            console.error(error)\r\n        })\r\n    }\r\n    const deleteHero=()=>{\r\n        http.post(`/heroes/delete`,{\r\n            \"id\": activeHero.id\r\n        })\r\n        .then(res=>{\r\n            getHeroes()\r\n            setMessageModal('Герой успешно удален')\r\n            setIsMessage(true)\r\n        })\r\n        .catch(error=>{\r\n            console.error(error)\r\n        })\r\n    }\r\n    const updateHero=()=>{\r\n        http.post(`/heroes/update`,{\r\n            \"id\": activeHero.id,\r\n            \"nickname\": nickname,\r\n            \"realName\": realName,\r\n            \"originDescription\": originDescription,\r\n            \"superpowers\": superpowers,\r\n            \"catchPhrase\": catchPhrase,\r\n            \"imageArray\": heroImageArray\r\n        })\r\n        .then(res=>{\r\n            getHeroes()\r\n            setMessageModal('Герой успешно удален')\r\n            setIsMessage(true)\r\n        })\r\n        .catch(error=>{\r\n            console.error(error)\r\n        })\r\n    }\r\n    const clearInputs=()=>{\r\n        setNickname('')\r\n        setRealName('')\r\n        setOriginDescription('')\r\n        setSuperpowers('')\r\n        setCatchPhrase('')\r\n        setHeroImageArray([])\r\n        setIsHeroAdd(false)\r\n        setIsImagesAdd(false)\r\n    }\r\n    return (\r\n        <div className={styles.mainContainer}>\r\n            <div className={styles.heroesContainer}>\r\n                <div className={styles.createHero}>\r\n                    <div className={styles.buttonCreateHero} onClick={()=>setIsHeroAdd(true)}>\r\n                        Добавить Героя\r\n                    </div>\r\n                    <ModalWindow isVisible={isHeroAdd}>\r\n                        <div className={styles.addHeroContainer}>\r\n                            <div className={styles.inputArea}>\r\n                                <span>Прозвище</span>\r\n                                <input type=\"text\" value={nickname} onChange={(event)=>setNickname(event.target.value)}/>\r\n                            </div>\r\n                            <div className={styles.inputArea}>\r\n                                <span>Настоящее имя</span>\r\n                                <input type=\"text\" value={realName} onChange={(event)=>setRealName(event.target.value)}/>\r\n                            </div>\r\n                            <div className={styles.inputArea}>\r\n                                <span>Описание происхождения</span>\r\n                                <textarea name=\"description\" rows='4' value={originDescription} onChange={(event)=>setOriginDescription(event.target.value)}></textarea>\r\n                            </div>\r\n                            <div className={styles.inputArea}>\r\n                                <span>Суперсилы</span>\r\n                                <textarea name=\"superpowers\" rows='4' value={superpowers} onChange={(event)=>setSuperpowers(event.target.value)}></textarea>\r\n                            </div>\r\n                            <div className={styles.inputArea}>\r\n                                <span>Крылатая фраза</span>\r\n                                <textarea name=\"phrase\" rows='4' value={catchPhrase} onChange={(event)=>setCatchPhrase(event.target.value)}></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.buttonsAddHero}>\r\n                            <div className={styles.closeButton} onClick={()=>clearInputs()}>Отмена</div>\r\n                            <div className={styles.acceptButton} onClick={()=>{\r\n                                setIsHeroAdd(false)\r\n                                setIsImagesAdd(true)\r\n                            }}>Далее</div>\r\n                        </div>\r\n                    </ModalWindow>\r\n                    <ModalWindow isVisible={isImagesAdd}>\r\n                        <div className={styles.addHeroContainer}>\r\n                            <ImageUploading\r\n                                multiple\r\n                                value={heroImageArray}\r\n                                onChange={(imageList,index) => setHeroImageArray(imageList)}\r\n                                dataURLKey=\"dataUrl\"\r\n                            >\r\n                                {({onImageUpload, isDragging, dragProps}) => (\r\n                                    <div className={styles.addImageButton+' '+ styles.imageBlock}\r\n                                        style={isDragging ? {backgroundColor:\"lightgreen\"} : {backgroundColor:\"\"}}\r\n                                        onClick={onImageUpload}\r\n                                        {...dragProps}\r\n                                    >\r\n                                        <span>Добавить картинку</span>\r\n                                        <FontAwesomeIcon icon={faPlusCircle} style={{color: 'white', fontSize: '4em'}}/>\r\n                                    </div>\r\n                                )}\r\n                            </ImageUploading>\r\n                            {\r\n                                heroImageArray.map((el,index)=>{\r\n                                    return(\r\n                                        <div className={styles.imageBlock} key={index}>\r\n                                            <div className={styles.deleteImage} onClick={()=>{\r\n                                                let newArray=heroImageArray.filter((item,i)=>i!==index)\r\n                                                setHeroImageArray(newArray)\r\n                                            }}>Удалить</div>\r\n                                            <img src={el.dataUrl} alt=\"картинка\"/>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className={styles.buttonsAddHero}>\r\n                            <div className={styles.closeButton} onClick={()=>clearInputs()}>Отмена</div>\r\n                            <div className={styles.acceptButton} onClick={()=>createHero()}>Готово</div>\r\n                        </div>\r\n                    </ModalWindow>\r\n                    <ModalWindow isVisible={isMessage}>\r\n                            <span>{messageModal}</span>\r\n                            <div className={styles.buttonsAddHero}>\r\n                                <div className={styles.acceptButton} onClick={()=>setIsMessage(false)}>Ок</div>\r\n                            </div>\r\n                    </ModalWindow>\r\n                </div>\r\n                <HeroPages heroes={heroList} setActiveHero={setActiveHero} activeHero={activeHero}/>\r\n                {activeHero &&\r\n                    <div className={styles.buttonsHero}>\r\n                        <div className={styles.closeButton} onClick={()=>deleteHero}>Удалить</div>\r\n                        <div className={styles.acceptButton}>Редактировать</div>\r\n                    </div>}\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nHeroes.propTypes = {};\r\n\r\nexport default Heroes;","D:\\Superheroes-CRUD\\client\\src\\components\\HeroPages\\index.js",["40","41","42","43"],"import React,{useState,useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './HeroPages.module.sass'\r\nimport HeroInfo from '../HeroInfo'\r\nconst HeroPages = (props) => {\r\n    const [heroBeautyArray,setHeroBeautyArray]=useState([])\r\n    const [activePage,setActivePage]=useState()\r\n    useEffect(()=>{\r\n        let pageArray=[],\r\n        heroesArray=[]\r\n        console.log(props.heroes)\r\n        if(props.heroes!==[]){\r\n            props.heroes.map((hero,index)=>{\r\n                pageArray.push(hero)\r\n                if(pageArray.length==5 || (index+1)==props.heroes.length){\r\n                    heroesArray.push(pageArray)\r\n                    pageArray=[]    \r\n                }\r\n            })\r\n            setHeroBeautyArray(heroesArray)\r\n            setActivePage(0)\r\n        }\r\n    },[props.heroes])\r\n    return (\r\n        <div className={styles.heroPages}>\r\n            <div className={styles.heroList}>\r\n                {heroBeautyArray[0] && heroBeautyArray[activePage].map((hero,index)=>{\r\n                    return(\r\n                        <div className={styles.hero} key={index} onClick={()=>{\r\n                            props.setActiveHero(hero)\r\n                        }}>\r\n                            {hero.imageArray[0]?\r\n                            (<>\r\n                            <img src={hero.imageArray[0]} alt=\"Изображение героя\"/>\r\n                            <div className={styles.heroName}>{hero.nickname}</div>\r\n                            </>):\r\n                            (<span>Изображение отсутствует</span>)}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className={styles.numberButtons}>\r\n                {heroBeautyArray.length>=2 && heroBeautyArray.map((hero,index)=>{\r\n                    return(\r\n                        <div className={activePage==index?styles.pageButton + ' ' + styles.activePageButton:styles.pageButton} \r\n                        key={index} onClick={()=>setActivePage(index)}>{index+1}</div>\r\n                    )\r\n                })\r\n                }\r\n            </div>\r\n            {props.activeHero != null &&\r\n                <HeroInfo hero={props.activeHero}/>\r\n            }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nHeroPages.propTypes = {\r\n    heroes: PropTypes.array,\r\n    setActiveHero: PropTypes.func,\r\n    activeHero: PropTypes.object\r\n};\r\n\r\nexport default HeroPages;","D:\\Superheroes-CRUD\\client\\src\\components\\ModalWindow\\index.js",[],"D:\\Superheroes-CRUD\\client\\src\\components\\HeroInfo\\index.js",["44"],"import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './HeroInfo.module.sass'\r\nconst HeroInfo = (props) => {\r\n    return (\r\n        <div className={styles.heroInfo}>\r\n            <h1>{props.hero.nickname}</h1>\r\n            <span>{props.hero.realName}</span>\r\n            <h2>Крылатая фраза:</h2>\r\n            <p>\"{props.hero.catchPhrase}\"</p>\r\n            <h2>Суперсилы:</h2>\r\n            <p>{props.hero.superpowers}</p>\r\n            <h2>Происхождение</h2>\r\n            <p>{props.hero.originDescription}</p>\r\n            <div className={styles.heroImages}>\r\n            {props.hero.imageArray.map((image,index)=>{\r\n                    return(\r\n                        <div className={styles.imageBlock} key={index}>\r\n                            <img src={image} alt=\"\"/>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nHeroInfo.propTypes = {\r\n    hero: PropTypes.object\r\n};\r\n\r\nexport default HeroInfo;",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":12},{"ruleId":"49","severity":1,"message":"53","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":17},{"ruleId":"49","severity":1,"message":"54","line":76,"column":11,"nodeType":"51","messageId":"52","endLine":76,"endColumn":21},{"ruleId":"55","severity":1,"message":"56","line":13,"column":42,"nodeType":"57","messageId":"58","endLine":13,"endColumn":44},{"ruleId":"59","severity":1,"message":"60","line":15,"column":36,"nodeType":"61","messageId":"62","endLine":15,"endColumn":38},{"ruleId":"59","severity":1,"message":"60","line":15,"column":52,"nodeType":"61","messageId":"62","endLine":15,"endColumn":54},{"ruleId":"59","severity":1,"message":"60","line":45,"column":51,"nodeType":"61","messageId":"62","endLine":45,"endColumn":53},{"ruleId":"49","severity":1,"message":"63","line":1,"column":16,"nodeType":"51","messageId":"52","endLine":1,"endColumn":24},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","'updateHero' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]