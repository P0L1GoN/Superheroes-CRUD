[{"D:\\Superheroes-CRUD\\client\\src\\index.js":"1","D:\\Superheroes-CRUD\\client\\src\\App.js":"2","D:\\Superheroes-CRUD\\client\\src\\reportWebVitals.js":"3","D:\\Superheroes-CRUD\\client\\src\\components\\Heroes\\index.js":"4","D:\\Superheroes-CRUD\\client\\src\\components\\HeroPages\\index.js":"5","D:\\Superheroes-CRUD\\client\\src\\components\\ModalWindow\\index.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":165,"mtime":1610880582507,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":7852,"mtime":1611094553465,"results":"11","hashOfConfig":"8"},{"size":221,"mtime":1610894407352,"results":"12","hashOfConfig":"8"},{"size":569,"mtime":1610919651856,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"2tskn6",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"D:\\Superheroes-CRUD\\client\\src\\index.js",[],["30","31"],"D:\\Superheroes-CRUD\\client\\src\\App.js",["32"],"import logo from './logo.svg';\nimport Heroes from \"./components/Heroes\"\nfunction App() {\n  return (\n    <>\n    <Heroes></Heroes>\n    </>\n  );\n}\n\nexport default App;\n","D:\\Superheroes-CRUD\\client\\src\\reportWebVitals.js",[],"D:\\Superheroes-CRUD\\client\\src\\components\\Heroes\\index.js",["33","34","35"],"import React,{useState,useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios'\r\nimport styles from './Heroes.module.sass'\r\nimport HeroPages from '../HeroPages'\r\nimport ModalWindow from '../ModalWindow'\r\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport ImageUploading from \"react-images-uploading\"\r\n\r\nconst http = axios.create({\r\n    baseURL: 'http://localhost:3001',\r\n    responseType: \"json\",\r\n    timeout: 10000,\r\n})\r\n//функция получения списка героев\r\nconst getHeroes= ()=>{\r\n    return new Promise((resolve,reject)=>{\r\n        http.get(`/heroes`)\r\n        .then(res=>{\r\n            resolve(res.data)\r\n        })\r\n        .catch(error=>{\r\n            console.error(error)\r\n            reject(error)\r\n        })\r\n    })\r\n}\r\n\r\nconst Heroes = () => {\r\n    const [heroList,setHeroList]=useState([])\r\n    const [isHeroAdd,setIsHeroAdd]=useState(false)\r\n    const [isImagesAdd,setIsImagesAdd]=useState(false)\r\n    const [isAddReady,setIsAddReady]=useState(false)\r\n    const [nickname,setNickname]=useState('')\r\n    const [realName,setRealName]=useState('')\r\n    const [originDescription,setOriginDescription]=useState('')\r\n    const [superpowers,setSuperpowers]=useState('')\r\n    const [catchPhrase,setCatchPhrase]=useState('')\r\n    const [heroImageArray,setHeroImageArray]=useState([])\r\n    useEffect(()=>{\r\n        getHeroes().then((res)=>{\r\n            if(res!==null)\r\n                setHeroList(res)\r\n            console.log(res)\r\n        })\r\n    },[])\r\n    const clearInputs=()=>{\r\n        setNickname('')\r\n        setRealName('')\r\n        setOriginDescription('')\r\n        setSuperpowers('')\r\n        setCatchPhrase('')\r\n        setHeroImageArray([])\r\n        setIsHeroAdd(false)\r\n        setIsImagesAdd(false)\r\n    }\r\n    const createHero=()=>{\r\n        return new Promise((resolve,reject)=>{\r\n            http.post(`/heroes/create`,{\r\n                \"nickname\": nickname,\r\n                \"realName\": realName,\r\n                \"originDescription\": originDescription,\r\n                \"superpowers\": superpowers,\r\n                \"catchPhrase\": catchPhrase,\r\n                \"imageArray\": heroImageArray\r\n            })\r\n            .then(res=>{\r\n                resolve(res.data)\r\n                setIsAddReady(true)\r\n                clearInputs()\r\n            })\r\n            .catch(error=>{\r\n                console.error(error)\r\n                reject(error)\r\n            })\r\n        })\r\n    }\r\n    return (\r\n        <div className={styles.mainContainer}>\r\n            <div className={styles.heroesContainer}>\r\n                <div className={styles.createHero}>\r\n                    <div className={styles.buttonCreateHero} onClick={()=>setIsHeroAdd(true)}>\r\n                        Добавить Героя\r\n                    </div>\r\n                    <ModalWindow isVisible={isHeroAdd}>\r\n                        <div className={styles.addHeroContainer}>\r\n                            <div className={styles.inputArea}>\r\n                                <span>Прозвище</span>\r\n                                <input type=\"text\" value={nickname} onChange={(event)=>setNickname(event.target.value)}/>\r\n                            </div>\r\n                            <div className={styles.inputArea}>\r\n                                <span>Настоящее имя</span>\r\n                                <input type=\"text\" value={realName} onChange={(event)=>setRealName(event.target.value)}/>\r\n                            </div>\r\n                            <div className={styles.inputArea}>\r\n                                <span>Описание происхождения</span>\r\n                                <textarea name=\"description\" rows='4' value={originDescription} onChange={(event)=>setOriginDescription(event.target.value)}></textarea>\r\n                            </div>\r\n                            <div className={styles.inputArea}>\r\n                                <span>Суперсилы</span>\r\n                                <textarea name=\"superpowers\" rows='4' value={superpowers} onChange={(event)=>setSuperpowers(event.target.value)}></textarea>\r\n                            </div>\r\n                            <div className={styles.inputArea}>\r\n                                <span>Крылатая фраза</span>\r\n                                <textarea name=\"phrase\" rows='4' value={catchPhrase} onChange={(event)=>setCatchPhrase(event.target.value)}></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.buttonsAddHero}>\r\n                            <div className={styles.closeButton} onClick={()=>clearInputs()}>Отмена</div>\r\n                            <div className={styles.acceptButton} onClick={()=>{\r\n                                setIsHeroAdd(false)\r\n                                setIsImagesAdd(true)\r\n                            }}>Далее</div>\r\n                        </div>\r\n                    </ModalWindow>\r\n                    <ModalWindow isVisible={isImagesAdd}>\r\n                        <div className={styles.addHeroContainer}>\r\n                            <ImageUploading\r\n                                multiple\r\n                                value={heroImageArray}\r\n                                onChange={(imageList,index) => setHeroImageArray(imageList)}\r\n                                dataURLKey=\"dataUrl\"\r\n                            >\r\n                                {({onImageUpload, isDragging, dragProps}) => (\r\n                                    <div className={styles.addImageButton+' '+ styles.imageBlock}\r\n                                        style={isDragging ? {backgroundColor:\"lightgreen\"} : {backgroundColor:\"\"}}\r\n                                        onClick={onImageUpload}\r\n                                        {...dragProps}\r\n                                    >\r\n                                        <span>Добавить картинку</span>\r\n                                        <FontAwesomeIcon icon={faPlusCircle} style={{color: 'white', fontSize: '4em'}}/>\r\n                                    </div>\r\n                                )}\r\n                            </ImageUploading>\r\n                            {\r\n                                heroImageArray.map(el=>{\r\n                                    return(\r\n                                        <div className={styles.imageBlock}>\r\n                                            <img src={el.dataUrl} alt=\"картинка\"/>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className={styles.buttonsAddHero}>\r\n                            <div className={styles.closeButton} onClick={()=>clearInputs()}>Отмена</div>\r\n                            <div className={styles.acceptButton} onClick={()=>createHero()}>Готово</div>\r\n                        </div>\r\n                    </ModalWindow>\r\n                    <ModalWindow isVisible={isAddReady}>\r\n                            <span>Герой успешно добавился</span>\r\n                            <div className={styles.buttonsAddHero}>\r\n                                <div className={styles.acceptButton} onClick={()=>setIsAddReady(false)}>Ок</div>\r\n                            </div>\r\n                    </ModalWindow>\r\n                </div>\r\n                <div className={styles.heroPages}>\r\n                    <HeroPages/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nHeroes.propTypes = {};\r\n\r\nexport default Heroes;","D:\\Superheroes-CRUD\\client\\src\\components\\HeroPages\\index.js",["36"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst HeroPages = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nHeroPages.propTypes = {};\r\n\r\nexport default HeroPages;","D:\\Superheroes-CRUD\\client\\src\\components\\ModalWindow\\index.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"41","severity":1,"message":"45","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":17},{"ruleId":"41","severity":1,"message":"46","line":31,"column":12,"nodeType":"43","messageId":"44","endLine":31,"endColumn":20},{"ruleId":"47","severity":2,"message":"48","line":154,"column":97,"nodeType":"43","messageId":"49","endLine":154,"endColumn":100},{"ruleId":"41","severity":1,"message":"45","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":17},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","'heroList' is assigned a value but never used.","no-undef","'fal' is not defined.","undef","no-global-assign","no-unsafe-negation"]